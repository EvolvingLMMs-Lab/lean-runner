syntax = "proto3";

package lean_runner;

option go_package = "github.com/EvolvingLMMs-Lab/lean-runner/server/gen/go/proto";

import "google/protobuf/struct.proto";

// Service for handling Lean proofs.
service ProveService {
  // Synchronously check a Lean proof and return the result.
  rpc CheckProof(CheckProofRequest) returns (ProofResult);

  // Asynchronously submit a Lean proof for execution.
  rpc SubmitProof(SubmitProofRequest) returns (SubmitProofResponse);

  // Retrieve the result of a previously submitted proof.
  rpc GetResult(GetResultRequest) returns (ProofResult);
}

message CheckProofRequest {
  string proof = 1;
  // A JSON-like structure for Lean proof configuration.
  google.protobuf.Struct config = 2;
}

message SubmitProofRequest {
  string proof = 1;
  // A JSON-like structure for Lean proof configuration.
  google.protobuf.Struct config = 2;
}

message SubmitProofResponse {
  string proof_id = 1;
}

message GetResultRequest {
  string proof_id = 1;
}

// Represents the result of a proof execution.
message ProofResult {
  string proof_id = 1;
  bool success = 2;
  string result = 3;
  string error_message = 4;
}
